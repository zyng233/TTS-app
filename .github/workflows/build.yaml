name: Build TTS App for All Platforms

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-12] # Pinned to specific versions
        # Alternative for wider Windows compatibility:
        # os: [ubuntu-18.04, windows-2019, windows-2022, macos-12]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Build with PyInstaller
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            # Linux-specific optimizations
            pyinstaller --onefile --strip --add-binary='/usr/lib/x86_64-linux-gnu/libstdc++.so.6:.' src/main.py
          elif [ "$RUNNER_OS" = "Windows" ]; then
            # Windows-specific optimizations
            pyinstaller --onefile --win-private-assemblies --win-no-prefer-redirects src/main.py
          else
            # macOS-specific optimizations
            pyinstaller --onefile --osx-bundle-identifier com.yourdomain.ttsapp src/main.py
          fi
        shell: bash

      - name: Rename and move binary
        run: |
          mkdir dist-release
          if [ "$RUNNER_OS" = "Windows" ]; then
            mv dist/main.exe dist-release/TTS_App_Windows.exe
          elif [ "$RUNNER_OS" = "macOS" ]; then
            mv dist/main dist-release/TTS_App_macOS
            # Sign the macOS binary (recommended)
            # codesign --force --deep -s "Your Developer ID" dist-release/TTS_App_macOS
          else
            mv dist/main dist-release/TTS_App_Linux
            # Verify Linux binary compatibility
            docker run --rm -v "$(pwd)/dist-release:/app" ubuntu:18.04 /app/TTS_App_Linux --version || echo "Compatibility check failed"
          fi
        shell: bash

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TTS_App_${{ runner.os }}
          path: dist-release/*

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: dist-release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
