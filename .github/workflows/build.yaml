name: Build TTS App for All Platforms

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Linux dependencies (Tcl/Tk)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk tk-dev tcl-dev tcl tcl-tls libx11-6

      - name: Install macOS dependencies (Tcl/Tk)
        if: matrix.os == 'macos-latest'
        run: |
          brew install tcl-tk

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip pyinstaller ttkbootstrap pygame
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Create PyInstaller hook for Tcl/Tk
        run: |
          echo "from PyInstaller.utils.hooks import collect_data_files" > hook-tkinter.py
          echo "datas = collect_data_files('tkinter')" >> hook-tkinter.py

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile \
            --add-data 'images:images' \
            --add-data 'UserGuide.md:UserGuide.md' \
            --hidden-import='ttkbootstrap.localization' \
            --hidden-import='PIL._tkinter_finder' \
            --additional-hooks-dir=. \
            src/main.py

      - name: Rename output binary
        run: |
          mkdir -p dist-release
          if [ "$RUNNER_OS" = "Windows" ]; then
            mv dist/main.exe dist-release/TTS_App_Windows.exe
          elif [ "$RUNNER_OS" = "macOS" ]; then
            mv dist/main dist-release/TTS_App_macOS
          else
            mv dist/main dist-release/TTS_App_Linux
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TTS_App_${{ runner.os }}
          path: dist-release/*
